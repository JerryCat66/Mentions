package com.byth.lifesaver.adapter;

import android.app.Activity;
import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;

import com.bumptech.glide.Glide;
import com.bumptech.glide.load.engine.DiskCacheStrategy;
import com.byth.lifesaver.R;
import com.byth.lifesaver.util.UtilList;

import java.util.List;

/**
 * Created by Administrator on 2017/6/5 0005.
 * 商品详情图片轮播适配器
 */

public class ProductDetailViewPagerAdapter extends PagerAdapter implements ViewPager.OnPageChangeListener {
    private final static String TAG = "AdapterImage";
    private Activity mContext;//Context类
    private List<String> mListMaps;//图片的id
    private ViewPager mViewPager;//Viewpaper
    private ImageView[] mTips;//指示器数组
    public static int pageIndex = 0;//广告滚动位置索引


    private TextView mCurNum;
    private TextView mTotalNum;
//    private View mShopLayout;

    public ProductDetailViewPagerAdapter(Activity context, List<String> listMaps, ViewPager viewPager, TextView _CurNum, TextView _TotalNum) {
        mContext = context;
        mListMaps = listMaps;
        mViewPager = viewPager;
        mCurNum = _CurNum;
        mTotalNum = _TotalNum;
        mViewPager.setOnPageChangeListener(this);
        initTips();
    }


    private void initTips() {
        int num = 1;
        if (mListMaps != null && mListMaps.size() > 0) {
            num = mListMaps.size();
            mCurNum.setVisibility(View.VISIBLE);
            mTotalNum.setVisibility(View.VISIBLE);
            mTotalNum.setText("/" + num);
        } else {
            mCurNum.setVisibility(View.GONE);
            mTotalNum.setVisibility(View.GONE);
        }
        mTips = new ImageView[num];

    }

    @Override
    public void notifyDataSetChanged() {
        super.notifyDataSetChanged();
        initTips();
    }

    @Override
    public int getCount() {
       /* if (UtilList.isEmpty(mListMaps)) {
            return 0;
        }
        return mListMaps.size() == 0 ? 1 : mListMaps.size();*/
        return Integer.MAX_VALUE;
    }

    @Override
    public boolean isViewFromObject(View view, Object obj) {
        return view == obj;
    }

    @Override
    public void destroyItem(ViewGroup container, int position, Object object) {
        container.removeView((View) object);
    }

    @Override
    public Object instantiateItem(ViewGroup container, final int position) {
        if (mListMaps == null || mListMaps.size() <= 0) {
            return container;
        }
        ImageView imageView = new ImageView(mContext);
        if (!UtilList.isEmpty(mListMaps)) {
            String url = mListMaps.get(position % mListMaps.size()) + "";
            Glide.with(mContext)
                    .load(url)
                    .placeholder(R.drawable.ad_de)
                    .error(R.drawable.ad_de)
                    .diskCacheStrategy(DiskCacheStrategy.ALL)
                    .into(imageView);
        }
        imageView.setScaleType(ImageView.ScaleType.FIT_XY);
        container.addView(imageView, ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);
        pageIndex = position % mListMaps.size() - 1;
        return imageView;
    }

    @Override
    public void onPageScrollStateChanged(int arg0) {
    }

    @Override
    public void onPageScrolled(int arg0, float arg1, int arg2) {
    }

    @Override
    public void onPageSelected(int position) {
        for (int i = 0; i < mTips.length; i++) {
            if (i == position % mTips.length) {
                mCurNum.setText((position + 1) + "");
            }
        }
    }

    /**
     * 广告图片列表总数
     *
     * @return 数量
     */
    public int getAdListSize() {
        return mListMaps.size();
    }

    /**
     * 清除广告图片列表的所有数据
     */
    public void clear() {
        mListMaps.clear();
        notifyDataSetChanged();
    }
}
