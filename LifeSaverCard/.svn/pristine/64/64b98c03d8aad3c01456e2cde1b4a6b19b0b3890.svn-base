package com.byth.lifesaver.function.card.activity;

import android.content.Intent;
import android.graphics.Bitmap;
import android.net.Uri;
import android.os.Environment;
import android.provider.MediaStore;
import android.support.v7.widget.AppCompatButton;
import android.support.v7.widget.Toolbar;
import android.text.Editable;
import android.text.TextWatcher;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;

import com.byth.lifesaver.R;
import com.byth.lifesaver.api.AuthAPI;
import com.byth.lifesaver.base.FrameActivity;
import com.byth.lifesaver.http.ApiException;
import com.byth.lifesaver.http.HttpResult;
import com.byth.lifesaver.http.HttpSubscriber;
import com.byth.lifesaver.http.SubscriberOnNextListener;
import com.byth.lifesaver.util.Contants;
import com.byth.lifesaver.util.MyCountDownTimer;
import com.byth.lifesaver.widget.DialogPopupBottom;
import com.fenguo.library.photowall.PhotoWallType;
import com.fenguo.library.util.ClippingPicture;
import com.fenguo.library.util.ContantsUtil;
import com.fenguo.library.util.FenguoUtil;
import com.fenguo.library.util.JsonUtil;
import com.fenguo.library.util.SdCardUtil;
import com.fenguo.library.util.StringUtil;
import com.gyf.barlibrary.ImmersionBar;

import java.io.File;
import java.util.HashMap;

import butterknife.InjectView;
import okhttp3.MediaType;
import okhttp3.RequestBody;

/**
 * Created by Administrator on 2017/6/12 0012.
 * 激活使用
 * TODO
 */

public class ActivityActiveForUsing extends FrameActivity implements View.OnClickListener {
    @InjectView(R.id.toolbar)
    Toolbar mToolbar;
    @InjectView(R.id.img_choose_image)
    ImageView imgChooseImage;
    @InjectView(R.id.btnVerify)
    Button btnVerify;
    @InjectView(R.id.editVerify)
    EditText edVerify;
    @InjectView(R.id.tv_bind_phone)
    TextView tvBindPhone;
    @InjectView(R.id.btn_finish)
    Button btnFinish;
    @InjectView(R.id.hot_line)
    TextView tvHotLine;
    @InjectView(R.id.btnUploadPic)
    AppCompatButton btnUploadPic;
    private MyCountDownTimer downTimer;
    private String type;
    private HttpSubscriber httpSubscriber;

    @Override
    protected void receiveDataFromPreActivity() {

    }

    @Override
    protected void initData() {

    }

    @Override
    protected void initComponent() {
        setContentView(R.layout.activity_active_for_using);
        setToolbar(mToolbar);
        ImmersionBar.with(this)
                .fitsSystemWindows(true)
                .statusBarColor(R.color.color_main)
                .fitsSystemWindows(true)
                .init();
    }

    @Override
    protected void initListener() {
        btnVerify.setOnClickListener(this);
        btnFinish.setOnClickListener(this);
        imgChooseImage.setOnClickListener(this);
        btnUploadPic.setOnClickListener(this);
        tvHotLine.setOnClickListener(this);
    }


    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.btnVerify://获取验证码
                downTimer = new MyCountDownTimer(btnVerify);
                downTimer.start();
                btnVerify.setBackgroundResource(R.drawable.btn_gray);
                getVerifyCode(tvBindPhone.getText().toString().trim());
                break;
            case R.id.btn_finish://完成按钮点击
                openActivityNotClose(ActivityActiveSuccess.class, null);
                break;
            case R.id.img_choose_image://选择图片
                new DialogPopupBottom(this)
                        .builder()
                        .setCanceledOnTouchOutside(false)
                        .setCancelable(false)
                        .addSheetItem("从相册选择照片", DialogPopupBottom.SheetItemColor.Blue, new DialogPopupBottom.OnSheetItemClickListener() {
                            @Override
                            public void onClick(int which) {
                                FenguoUtil.openPhotoWallActivity(ActivityActiveForUsing.this, SdCardUtil.getCaremaPath(ActivityActiveForUsing.this), 1, PhotoWallType.PICK.getType(),
                                        true, Contants.IMAGE_ACTIVE_FOR_USE);
                            }
                        })
                        .addSheetItem("拍照", DialogPopupBottom.SheetItemColor.Blue, new DialogPopupBottom.OnSheetItemClickListener() {
                            @Override
                            public void onClick(int which) {
                                Intent intentFromCapture = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
                                intentFromCapture.putExtra(MediaStore.EXTRA_OUTPUT, Uri.fromFile(new File(Environment.getExternalStorageDirectory(), Contants.SAVE_PICTRUE_NAME)));
                                startActivityForResult(intentFromCapture, Contants.IMAGE_FROM_CAMERA);
                            }
                        }).show();
                break;
            case R.id.btnUploadPic:
                new DialogPopupBottom(this)
                        .builder()
                        .setCanceledOnTouchOutside(false)
                        .setCancelable(false)
                        .addSheetItem("从相册选择照片", DialogPopupBottom.SheetItemColor.Blue, new DialogPopupBottom.OnSheetItemClickListener() {
                            @Override
                            public void onClick(int which) {
                                FenguoUtil.openPhotoWallActivity(ActivityActiveForUsing.this, SdCardUtil.getCaremaPath(ActivityActiveForUsing.this), 1, PhotoWallType.PICK.getType(),
                                        true, Contants.IMAGE_ACTIVE_FOR_USE);
                            }
                        })
                        .addSheetItem("拍照", DialogPopupBottom.SheetItemColor.Blue, new DialogPopupBottom.OnSheetItemClickListener() {
                            @Override
                            public void onClick(int which) {

                            }
                        }).show();
                break;
            case R.id.hot_line:
                telPhone(getResources().getString(R.string.hot_line_of_company));
                break;
        }
    }

    /**
     * 图片回调
     *
     * @param requestCode
     * @param resultCode
     * @param data
     */
    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        String[] str = data.getStringArrayExtra(ContantsUtil.PHOTO_RESULT);
        int degree = ClippingPicture.readPictureDegree(str[0]);
        Bitmap bitmap = ClippingPicture.decodeResizeBitmapSd(str[0], Contants.IMAGE_WIDTH, Contants.IMAGE_HEIGHT);
        bitmap = ClippingPicture.rotateBitmap(bitmap, degree);
       /* if (data == null) {
            return;
        }*/
        if (requestCode == Contants.IMAGE_ACTIVE_FOR_USE) {
            imgChooseImage.setImageBitmap(bitmap);
        }
        if (requestCode==Contants.IMAGE_FROM_CAMERA){

        }
    }

    /**
     * 获取验证码
     *
     * @param phone
     */
    private void getVerifyCode(String phone) {
        if (httpSubscriber != null) {
            httpSubscriber.unSubscribe();
        } else {
            httpSubscriber = new HttpSubscriber(onGetVerifyCodeNextListener);
            phone = tvBindPhone.getText().toString().trim();
            type = "AC";
            HashMap<String, String> map = new HashMap<>();
            map.put("mobileNo", phone);
            map.put("type", type);
            RequestBody body = RequestBody.create(MediaType.parse("Content-Type, application/json"), JsonUtil.toJson(map));
            AuthAPI.getInstance().getRegisterCodeWithRetrofit(httpSubscriber, body);
        }

    }

    SubscriberOnNextListener<HttpResult> onGetVerifyCodeNextListener = new SubscriberOnNextListener<HttpResult>() {
        @Override
        public void onStart() {
            showLoadingDialog();
        }

        @Override
        public void onNext(HttpResult result) {
            showToast("获取验证码成功");
            hideLoadingDialog();
        }

        @Override
        public void onApiError(ApiException e) {
            hideLoadingDialog();
            showToast("api error");
            showToast(e.getMessage());
        }

        @Override
        public void onNetworkError(Throwable e) {
            hideLoadingDialog();
            showToast("internet unavailable");
        }

        @Override
        public void onOtherError(Throwable e) {
            hideLoadingDialog();
            Log.i("msg", "the error is=======>>>>" + e.toString());
        }

        @Override
        public void onCompleted() {
            hideLoadingDialog();
        }
    };

    @Override
    protected void onStop() {
        super.onStop();
        if (downTimer != null) {
            downTimer.cancel();
            btnVerify.setClickable(true);
            btnVerify.setText("获取验证码");
            btnVerify.setBackgroundResource(R.drawable.shape_with_corner_auth_code);
        }
    }
}
