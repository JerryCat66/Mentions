package com.byth.lifesaver.function.auth;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;
import android.os.Bundle;
import android.renderscript.Allocation;
import android.renderscript.Element;
import android.renderscript.RenderScript;
import android.renderscript.ScriptIntrinsicBlur;
import android.support.v7.widget.AppCompatButton;
import android.view.View;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;

import com.byth.lifesaver.R;
import com.byth.lifesaver.base.FrameActivity;
import com.fenguo.library.util.StringUtil;
import com.gyf.barlibrary.ImmersionBar;

import butterknife.InjectView;

/**
 * Created by Administrator on 2017/5/27 0027.
 */

public class ForgetPswStep2Activity extends FrameActivity implements View.OnClickListener {
    @InjectView(R.id.sv_root)
    LinearLayout svRoot;
    @InjectView(R.id.input_password)
    EditText edPassword;
    @InjectView(R.id.input_password_confirm)
    EditText edPassword_Confirm;
    @InjectView(R.id.phone_num)
    TextView tvPhoneNum;
    @InjectView(R.id.btn_ok)
    AppCompatButton btnOk;
    @InjectView(R.id.btn_Back)
    ImageButton btnBack;
    @InjectView(R.id.hot_line)
    TextView tvHotLine;
    private Context mContext;
    private Bundle bundle;
    private String phoneNum;

    @Override
    protected void receiveDataFromPreActivity() {
        bundle = new Bundle();
        phoneNum = bundle.getString("phoneNum");
    }

    @Override
    protected void initData() {

    }

    @Override
    protected void initComponent() {
        setContentView(R.layout.activity_forget_psw_step2);
        ImmersionBar.with(this)
                .statusBarColor(R.color.transparent)
                .init();
        //高斯模糊背景
        mContext = this;
        tvPhoneNum.setText("手机号码:" + phoneNum);
        applyBlur();
    }

    @Override
    protected void initListener() {
        btnOk.setOnClickListener(this);
        btnBack.setOnClickListener(this);
        tvHotLine.setOnClickListener(this);
    }

    private void applyBlur() {
        Drawable db = getResources().getDrawable(R.drawable.bg_login);
        BitmapDrawable drawable = (BitmapDrawable) db;
        Bitmap bgBitmap = drawable.getBitmap();
        //处理得到模糊效果的图
        RenderScript renderScript = RenderScript.create(mContext);
        // Allocate memory for Renderscript to work with
        final Allocation input = Allocation.createFromBitmap(renderScript, bgBitmap);
        final Allocation output = Allocation.createTyped(renderScript, input.getType());
        // Load up an instance of the specific script that we want to use.
        ScriptIntrinsicBlur scriptIntrinsicBlur = ScriptIntrinsicBlur.create(renderScript, Element.U8_4(renderScript));
        scriptIntrinsicBlur.setInput(input);
        // Set the blur radius
        scriptIntrinsicBlur.setRadius(25);
        // Start the ScriptIntrinisicBlur
        scriptIntrinsicBlur.forEach(output);
        // Copy the output to the blurred bitmap
        output.copyTo(bgBitmap);
        renderScript.destroy();
        BitmapDrawable bitmapDrawable = new BitmapDrawable(getResources(), bgBitmap);
        svRoot.setBackground(bitmapDrawable);
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.btn_ok:
                checkRequire();
                break;
            case R.id.btn_Back:
                onBackPress();
                break;
            case R.id.hot_line://公司电话
                telPhone(getResources().getString(R.string.hot_line_of_company));
                break;
        }
    }

    private void checkRequire() {
        String password = edPassword.getText().toString().trim();
        String passwordConfirm = edPassword_Confirm.getText().toString().trim();
        if (StringUtil.isEmpty(password) || StringUtil.isEmpty(passwordConfirm)) {
            showToast("请输入密码");
        } else if (password.length() < 6 || passwordConfirm.length() < 6) {
            showToast("密码长度不能小于6位");
            return;
        } else if (!lifeSaverUtil.checkPassword(password, 6, 18) || !lifeSaverUtil.checkPassword(passwordConfirm, 6, 18)) {
            showToast("密码长度应在6-18位");
            return;
        } else if (password != passwordConfirm) {
            showToast("两次密码输入不一致");
            return;
        } else {
            setNewPassword();
        }
    }

    /**
     * 设置新密码
     */
    private void setNewPassword() {

    }

    /**
     * 返回上一层
     */
    private void onBackPress() {
        onBackPressed();
    }
}
